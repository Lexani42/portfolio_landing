name: deploy portfolio to vps

on:
  push:
    branches: [ main ]

jobs:
  docker-build:
    if: ${{ vars.KUBERNETES_MODE == 'true' || vars.COMPOSE_MODE == 'true' }}
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: lexani42/portfolio
      TAG: latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    if: ${{ vars.KUBERNETES_MODE == 'true' || vars.COMPOSE_MODE == 'true' }}
    needs: docker-build
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: lexani42/portfolio
      TAG: latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Deploy using Helm
        if: ${{ vars.KUBERNETES_MODE == 'true' }}
        run: |
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          helm upgrade --install portfolio ./helm/portfolio \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ env.TAG }} \
            --set image.pullPolicy=Always
        shell: bash

      - name: Deploy using Compose
        if: ${{ vars.COMPOSE_MODE == 'true' }}
        run: |
          docker compose down
          docker compose pull
          docker compose up -d
        shell: bash

  wrangler-deploy:
    if: ${{ vars.WRANGLER_MODE == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: install opennextjs
        run: npm install -g @opennextjs/cloudflare

      - name: Build app
        run: npm run build

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Deploy to Cloudflare Pages
        run: wrangler pages deploy .output/public --project-name=portfolio
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
